{"is_source_file": true, "format": "Python", "description": "This file implements a FastAPI backend API for an AI chatbot application, including health check, CORS preflight, and chat reply endpoints with detailed error handling and reply generation logic.", "external_files": ["src.logging_config", "src.api.schemas", "src.config", "src.services.chat"], "external_methods": ["configure_logging", "normalize_to_chat_request", "generate_reply"], "published": ["app"], "classes": [], "methods": [{"name": "health_check()", "description": "A simple GET endpoint for health checking the service availability.", "scope": "", "scopeKind": ""}, {"name": "chat_preflight()", "description": "Handles CORS preflight requests for the /api/chat endpoint.", "scope": "", "scopeKind": ""}, {"name": "chat( body: Dict[str, Any] = Body( ..., description=\"Minimal: {'message': '...'}; or Rich: {'messages': [{role,content}], 'response_style'?: 'plain'|'list'|'guided'}\", ) )", "description": "Main POST endpoint that processes chat requests, normalizing input, calling reply generation, and handling various error conditions asynchronously.", "scope": "", "scopeKind": ""}], "calls": ["configure_logging", "normalize_to_chat_request", "generate_reply", "asyncio.wait_for", "logging.getLogger", "logger.debug", "logger.warning", "logger.exception", "logger.info", "JSONResponse", "HTTPException"], "search-terms": ["FastAPI", "chat endpoint", "generate_reply", "normalize_to_chat_request", "CORS middleware", "Health check", "public interface", "asyncio timeout", "error handling"], "state": 2, "file_id": 4, "knowledge_revision": 119, "git_revision": "51297889b0de29dbea1aa5878ee82cc33bbce2ac", "revision_history": [{"9": "757bf43fd703ea2944bb63af5dadd0d7d4e65ff5"}, {"16": "757bf43fd703ea2944bb63af5dadd0d7d4e65ff5"}, {"22": "477851edac65914b4bb795dcc78f60584405088a"}, {"28": "4cc8b410056f4d3b135f9b43e36de3cfe67fb2ad"}, {"29": "4cc8b410056f4d3b135f9b43e36de3cfe67fb2ad"}, {"30": "4cc8b410056f4d3b135f9b43e36de3cfe67fb2ad"}, {"31": "4cc8b410056f4d3b135f9b43e36de3cfe67fb2ad"}, {"32": "4cc8b410056f4d3b135f9b43e36de3cfe67fb2ad"}, {"33": "4cc8b410056f4d3b135f9b43e36de3cfe67fb2ad"}, {"49": "456e9c029c4b29c266886e44e85799c61bf3fd30"}, {"52": "cab4e039bd7312c8402178b1e7ba5a1cf262cdf1"}, {"66": "6c70cf123600356025f5691450d9d9b7fccf0ee9"}, {"67": "6c70cf123600356025f5691450d9d9b7fccf0ee9"}, {"68": "6c70cf123600356025f5691450d9d9b7fccf0ee9"}, {"69": "6c70cf123600356025f5691450d9d9b7fccf0ee9"}, {"70": "d9a6a26f8c2e488da02588d94dbd88d9809d1cd2"}, {"71": "d9a6a26f8c2e488da02588d94dbd88d9809d1cd2"}, {"72": "d9a6a26f8c2e488da02588d94dbd88d9809d1cd2"}, {"76": "d9a6a26f8c2e488da02588d94dbd88d9809d1cd2"}, {"79": "d9a6a26f8c2e488da02588d94dbd88d9809d1cd2"}, {"81": "d9a6a26f8c2e488da02588d94dbd88d9809d1cd2"}, {"82": "1cba16128c94a6dbb47a3bdc8fd19413e96bb943"}, {"83": "1cba16128c94a6dbb47a3bdc8fd19413e96bb943"}, {"85": "1cba16128c94a6dbb47a3bdc8fd19413e96bb943"}, {"89": "5dd96cc1351e9c37c10b2ba0446654771d1a46ee"}, {"94": "3f14676ed524f28d04cfbdff3553ebc6069d530a"}, {"104": "4dad3cb367252022d1a4e66425911ee041930bb9"}, {"105": "4dad3cb367252022d1a4e66425911ee041930bb9"}, {"107": "04f00b983259bbdee3a14297cc814401dd93173d"}, {"109": "04f00b983259bbdee3a14297cc814401dd93173d"}, {"110": "a4f55668f1b821f823174dc8dfa2816f2ce7fa6e"}, {"111": "a4f55668f1b821f823174dc8dfa2816f2ce7fa6e"}, {"112": "a4f55668f1b821f823174dc8dfa2816f2ce7fa6e"}, {"113": "a4f55668f1b821f823174dc8dfa2816f2ce7fa6e"}, {"115": "a4f55668f1b821f823174dc8dfa2816f2ce7fa6e"}, {"116": "a4f55668f1b821f823174dc8dfa2816f2ce7fa6e"}, {"117": "a4f55668f1b821f823174dc8dfa2816f2ce7fa6e"}, {"118": "51297889b0de29dbea1aa5878ee82cc33bbce2ac"}, {"119": "51297889b0de29dbea1aa5878ee82cc33bbce2ac"}], "ctags": [{"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "chat", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/api/main.py", "pattern": "/^async def chat($/", "language": "Python", "kind": "function", "signature": "( body: Dict[str, Any] = Body( ..., description=\"Minimal: {'message': '...'}; or Rich: {'messages': [{role,content}], 'response_style'?: 'plain'|'list'|'guided'}\", ) )"}, {"_type": "tag", "name": "chat_preflight", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/api/main.py", "pattern": "/^def chat_preflight():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/api/main.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}], "hash": "4abea61dd754baa4c2e73f351aa19e11", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}]}