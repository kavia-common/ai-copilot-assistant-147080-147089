{"is_source_file": true, "format": "Python", "description": "This file defines a helper module for interacting with the OpenAI Chat API within a FastAPI backend. It includes functions for checking API configuration, building request payloads, making API calls, and providing fallback deterministic responses when the API is unavailable or misconfigured.", "external_files": ["src.api.schemas", "src.config.settings"], "external_methods": ["settings.OPENAI_API_KEY", "settings.OPENAI_MODEL"], "published": ["generate_reply"], "classes": [], "methods": [{"name": "bool _openai_is_configured()", "description": "Checks whether the OpenAI API key is set in the settings, indicating configuration readiness.", "scope": "", "scopeKind": ""}, {"name": "dict _build_openai_payload(messages: List[Message])", "description": "Creates the request payload for OpenAI's chat completion API based on conversation messages.", "scope": "", "scopeKind": ""}, {"name": "Optional[str] _call_openai(messages: List[Message])", "description": "Performs the actual HTTP request to OpenAI's chat completion endpoint and retrieves the reply content.", "scope": "", "scopeKind": ""}, {"name": "str generate_reply(messages: List[Message])", "description": "Public function that attempts to get a reply from OpenAI; falls back to deterministic response if API is unavailable or errors occur.", "scope": "", "scopeKind": ""}, {"name": "str summarize_prompt(prompt: str)", "description": "Generates a minimal, heuristic 'summary' of the user's input prompt to include in deterministic fallback replies.", "scope": "", "scopeKind": ""}], "calls": ["settings.OPENAI_API_KEY", "settings.OPENAI_MODEL", "httpx.Client.post", "_build_openai_payload", "_call_openai"], "search-terms": ["chat.py", "openai", "chat completion", "fallback response", "summarize_prompt", "generate_reply", "settings.OPENAI_API_KEY"], "state": 2, "file_id": 6, "knowledge_revision": 34, "git_revision": "e27cab233c6df5353338e43a779cb65c198264eb", "revision_history": [{"13": "e27cab233c6df5353338e43a779cb65c198264eb"}, {"15": "e27cab233c6df5353338e43a779cb65c198264eb"}, {"34": "e27cab233c6df5353338e43a779cb65c198264eb"}], "ctags": [{"_type": "tag", "name": "DEFAULT_GREETING", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^DEFAULT_GREETING = ($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "MAX_INPUT_CHARS", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^MAX_INPUT_CHARS = 5000$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "OPENAI_CHAT_URL", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^OPENAI_CHAT_URL = \"https:\\/\\/api.openai.com\\/v1\\/chat\\/completions\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "OPENAI_DEFAULT_MODEL", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^OPENAI_DEFAULT_MODEL = \"gpt-4o-mini\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_build_openai_payload", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def _build_openai_payload(messages: List[Message]) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(messages: List[Message])"}, {"_type": "tag", "name": "_call_openai", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def _call_openai(messages: List[Message]) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(messages: List[Message])"}, {"_type": "tag", "name": "_openai_is_configured", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def _openai_is_configured() -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "generate_reply", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def generate_reply(messages: List[Message]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(messages: List[Message])"}, {"_type": "tag", "name": "summarize_prompt", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def summarize_prompt(prompt: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(prompt: str)"}], "hash": "d4d5008b6a18538fac08e377b09da9b4", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/src/services/chat.py", "fields": [{"name": "DEFAULT_GREETING = (", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "MAX_INPUT_CHARS = 5000", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "OPENAI_CHAT_URL = \"https:\\/\\/api.openai.com\\/v1\\/chat\\/completions\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "OPENAI_DEFAULT_MODEL = \"gpt-4o-mini\"", "scope": "", "scopeKind": "", "description": "unavailable"}]}