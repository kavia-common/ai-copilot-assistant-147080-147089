{"is_source_file": true, "format": "Python", "description": "This Python source file implements an interface for interacting with the OpenAI API, including building message payloads, handling responses, and providing fallback responses when API calls fail. It includes functions for configuring API requests, managing conversation history, and generating user-friendly replies.", "external_files": ["src/api/schemas", "src/config"], "external_methods": ["Message.role", "RoleEnum", "settings", "getattr"], "published": ["generate_reply", "summarize_prompt"], "classes": [], "methods": [{"name": "bool _openai_is_configured()", "description": "Checks whether the OpenAI API key is configured via environment/settings.", "scope": "", "scopeKind": ""}, {"name": "List[dict] _build_messages_for_openai(messages: List[Message])", "description": "Constructs the message list for the OpenAI API, wrapping it with a system prompt and preserving message order.", "scope": "", "scopeKind": ""}, {"name": "dict _build_openai_payload(messages: List[Message])", "description": "Builds the payload dictionary for OpenAI Chat Completion requests, setting model, messages, temperature, and max tokens.", "scope": "", "scopeKind": ""}, {"name": "Optional[str] _call_openai(messages: List[Message])", "description": "Makes the API request to OpenAI's chat endpoint and returns the assistant's reply, handling errors gracefully.", "scope": "", "scopeKind": ""}, {"name": "str _deterministic_fallback_reply(messages: List[Message])", "description": "Provides a fallback answer if OpenAI API is unavailable, with heuristics based on user message content.", "scope": "", "scopeKind": ""}, {"name": "str generate_reply(messages: List[Message])", "description": "Main public function to generate chat reply, trying API first, then falling back to deterministic responses.", "scope": "", "scopeKind": ""}, {"name": "str summarize_prompt(prompt: str)", "description": "Creates a short, conservative summary or hint string from the user's prompt.", "scope": "", "scopeKind": ""}], "calls": ["_build_openai_payload", "_build_messages_for_openai", "_call_openai", "_deterministic_fallback_reply"], "search-terms": ["OpenAI API", "Chat completion", "fallback response", "message building", "heuristics for fallback", "chat API interaction", "AI assistant response"], "state": 2, "file_id": 6, "knowledge_revision": 48, "git_revision": "abaa71d265cdf42d7c76a31c44f2c80d59ea2967", "revision_history": [{"13": "e27cab233c6df5353338e43a779cb65c198264eb"}, {"15": "e27cab233c6df5353338e43a779cb65c198264eb"}, {"34": "e27cab233c6df5353338e43a779cb65c198264eb"}, {"48": "abaa71d265cdf42d7c76a31c44f2c80d59ea2967"}], "ctags": [{"_type": "tag", "name": "DEFAULT_GREETING", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^DEFAULT_GREETING = ($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "MAX_INPUT_CHARS", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^MAX_INPUT_CHARS = 5000$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "OPENAI_CHAT_URL", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^OPENAI_CHAT_URL = \"https:\\/\\/api.openai.com\\/v1\\/chat\\/completions\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "OPENAI_DEFAULT_MODEL", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^OPENAI_DEFAULT_MODEL = \"gpt-4o-mini\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SYSTEM_PROMPT", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^SYSTEM_PROMPT = ($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_build_messages_for_openai", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def _build_messages_for_openai(messages: List[Message]) -> List[dict]:$/", "language": "Python", "typeref": "typename:List[dict]", "kind": "function", "signature": "(messages: List[Message])"}, {"_type": "tag", "name": "_build_openai_payload", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def _build_openai_payload(messages: List[Message]) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(messages: List[Message])"}, {"_type": "tag", "name": "_call_openai", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def _call_openai(messages: List[Message]) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(messages: List[Message])"}, {"_type": "tag", "name": "_deterministic_fallback_reply", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def _deterministic_fallback_reply(messages: List[Message]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(messages: List[Message])"}, {"_type": "tag", "name": "_openai_is_configured", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def _openai_is_configured() -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "generate_reply", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def generate_reply(messages: List[Message]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(messages: List[Message])"}, {"_type": "tag", "name": "summarize_prompt", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def summarize_prompt(prompt: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(prompt: str)"}], "hash": "3f1761f454179989008790598ba053f5", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/src/services/chat.py", "fields": [{"name": "DEFAULT_GREETING = (", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "MAX_INPUT_CHARS = 5000", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "OPENAI_CHAT_URL = \"https:\\/\\/api.openai.com\\/v1\\/chat\\/completions\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "OPENAI_DEFAULT_MODEL = \"gpt-4o-mini\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SYSTEM_PROMPT = (", "scope": "", "scopeKind": "", "description": "unavailable"}]}