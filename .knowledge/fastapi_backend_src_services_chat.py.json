{"is_source_file": true, "format": "Python", "description": "This file contains a Python module for managing interactions with the OpenAI chat API, including configuring requests, handling asynchronous calls with timeouts and error handling, and providing fallback responses when the API is unavailable. It also defines constants, helper functions, and the main async function 'generate_reply' for producing responses based on a list of messages.", "external_files": ["src.api.schemas", "src.config"], "external_methods": ["src.api.schemas.Message", "src.api.schemas.RoleEnum", "src.config.settings"], "published": ["generate_reply"], "classes": [], "methods": [{"name": "bool _openai_is_configured()", "description": "Checks if the OpenAI API key is configured via settings.", "scope": "", "scopeKind": ""}, {"name": "Optional[str] _extract_last_user_message(messages: List[Message])", "description": "Returns the content of the last user message in a list of messages.", "scope": "", "scopeKind": ""}, {"name": "List[dict] _build_messages_for_openai(messages: List[Message], response_style: Optional[str])", "description": "Constructs a minimal sequence of messages for OpenAI API, including system prompts and recent conversation context.", "scope": "", "scopeKind": ""}, {"name": "dict _build_openai_payload(messages: List[Message], response_style: Optional[str])", "description": "Creates the payload dictionary for the OpenAI chat completion request.", "scope": "", "scopeKind": ""}, {"name": "Optional[str] _call_openai_async(messages: List[Message], response_style: Optional[str])", "description": "Performs an asynchronous API call to OpenAI with timeout and error handling.", "scope": "", "scopeKind": ""}, {"name": "str _deterministic_fallback_reply(messages: List[Message], response_style: Optional[str])", "description": "Provides a concise, deterministic response when OpenAI API is unavailable or errors occur, with custom handling for specific queries.", "parameters": ["messages", "response_style"], "scope": "", "scopeKind": ""}, {"name": "str generate_reply(messages: List[Message], response_style: Optional[str] = None)", "description": "Main async function that generates a reply based on message history, attempting OpenAI API first, then falling back to deterministic responses.", "scope": "", "scopeKind": ""}, {"name": "Optional[str] _do_request()", "scope": "_call_openai_async", "scopeKind": "function", "description": "unavailable"}], "calls": ["_call_openai_async", "_deterministic_fallback_reply", "_build_openai_payload", "_extract_last_user_message", "_openai_is_configured"], "search-terms": ["chat.py", "async openai", "fallback response", "generate_reply", "chat completion", "system prompt", "Message", "RoleEnum", "settings"], "state": 2, "file_id": 6, "knowledge_revision": 65, "git_revision": "3535dcfd3fb7cfb7d825589b3ff454b089dc4691", "revision_history": [{"13": "e27cab233c6df5353338e43a779cb65c198264eb"}, {"15": "e27cab233c6df5353338e43a779cb65c198264eb"}, {"34": "e27cab233c6df5353338e43a779cb65c198264eb"}, {"48": "abaa71d265cdf42d7c76a31c44f2c80d59ea2967"}, {"53": "cab4e039bd7312c8402178b1e7ba5a1cf262cdf1"}, {"56": "6c70cf123600356025f5691450d9d9b7fccf0ee9"}, {"57": "6c70cf123600356025f5691450d9d9b7fccf0ee9"}, {"58": "6c70cf123600356025f5691450d9d9b7fccf0ee9"}, {"64": "dcd100df8d4150de9e828c133734c0a4a2d2fa37"}, {"65": "3535dcfd3fb7cfb7d825589b3ff454b089dc4691"}], "ctags": [{"_type": "tag", "name": "DEFAULT_GREETING", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^DEFAULT_GREETING = ($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "MAX_INPUT_CHARS", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^MAX_INPUT_CHARS = 5000$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "MAX_RESPONSE_CHARS", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^MAX_RESPONSE_CHARS = 4000$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "OPENAI_CALL_TIMEOUT_S", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^OPENAI_CALL_TIMEOUT_S = 20.0$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "OPENAI_CHAT_URL", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^OPENAI_CHAT_URL = \"https:\\/\\/api.openai.com\\/v1\\/chat\\/completions\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "OPENAI_DEFAULT_MODEL", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^OPENAI_DEFAULT_MODEL = \"gpt-4o-mini\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SYSTEM_PROMPT_BASE", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^SYSTEM_PROMPT_BASE = ($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SYSTEM_PROMPT_GUIDED", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^SYSTEM_PROMPT_GUIDED = ($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SYSTEM_PROMPT_LIST_HINT", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^SYSTEM_PROMPT_LIST_HINT = ($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_build_messages_for_openai", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def _build_messages_for_openai(messages: List[Message], response_style: Optional[str]) -> List[d/", "language": "Python", "typeref": "typename:List[dict]", "kind": "function", "signature": "(messages: List[Message], response_style: Optional[str])"}, {"_type": "tag", "name": "_build_openai_payload", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def _build_openai_payload(messages: List[Message], response_style: Optional[str]) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(messages: List[Message], response_style: Optional[str])"}, {"_type": "tag", "name": "_call_openai_async", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^async def _call_openai_async(messages: List[Message], response_style: Optional[str]) -> Optional/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(messages: List[Message], response_style: Optional[str])"}, {"_type": "tag", "name": "_deterministic_fallback_reply", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def _deterministic_fallback_reply(messages: List[Message], response_style: Optional[str]) -> str/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(messages: List[Message], response_style: Optional[str])"}, {"_type": "tag", "name": "_do_request", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^    async def _do_request() -> Optional[str]:$/", "file": true, "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "()", "scope": "_call_openai_async", "scopeKind": "function"}, {"_type": "tag", "name": "_extract_last_user_message", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def _extract_last_user_message(messages: List[Message]) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(messages: List[Message])"}, {"_type": "tag", "name": "_openai_is_configured", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^def _openai_is_configured() -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "generate_reply", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^async def generate_reply(messages: List[Message], response_style: Optional[str] = None) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(messages: List[Message], response_style: Optional[str] = None)"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/ai-copilot-assistant-147080-147089/fastapi_backend/src/services/chat.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}], "hash": "95d3eb52a666baef7efb7b7ff954954a", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/src/services/chat.py", "fields": [{"name": "DEFAULT_GREETING = (", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "MAX_INPUT_CHARS = 5000", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "MAX_RESPONSE_CHARS = 4000", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "OPENAI_CALL_TIMEOUT_S = 20.0", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "OPENAI_CHAT_URL = \"https:\\/\\/api.openai.com\\/v1\\/chat\\/completions\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "OPENAI_DEFAULT_MODEL = \"gpt-4o-mini\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SYSTEM_PROMPT_BASE = (", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SYSTEM_PROMPT_GUIDED = (", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SYSTEM_PROMPT_LIST_HINT = (", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}]}